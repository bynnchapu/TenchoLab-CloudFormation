---
AWSTemplateFormatVersion: "2010-09-09"
Parameters:
  ElbHostOriginFqdn:
    Type: String
  SystemName:
    Type: String
  ACMELB:
    Type: String
  S3Name:
    Type: String
  SGELB:
    Type: String
  PreSharedKey:
    Type: String
    Default: 2lv8anVLc
Resources:
  BlogELB:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub TenchoLab-${SystemName}
      Type: application
      Scheme: internet-facing
      SecurityGroups:
        - !Ref SGELB
      Subnets:
        - !ImportValue VPC-PublicSubnetIdDHCPA
        - !ImportValue VPC-PublicSubnetIdDHCPC
        - !ImportValue VPC-PublicSubnetIdDHCPD
      LoadBalancerAttributes:
        - Key: access_logs.s3.enabled
          Value: true
        - Key: access_logs.s3.bucket
          Value: !Ref S3Name
        - Key: access_logs.s3.prefix
          Value: ELBLog
        - Key: routing.http.drop_invalid_header_fields.enabled
          Value: true
        - Key: deletion_protection.enabled
          Value: true
  BlogELBHTTPListner:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref BlogELB
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: "redirect"
          RedirectConfig:
            Protocol: "HTTPS"
            Port: 443
            Host: "#{host}"
            Path: "/#{path}"
            Query: "#{query}"
            StatusCode: "HTTP_301"

  BlogELBHTTPSListner:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref BlogELB
      Protocol: HTTPS
      Port: 443
      Certificates:
        - CertificateArn: !Ref ACMELB
      DefaultActions:
        - Type: "fixed-response"
          FixedResponseConfig:
            StatusCode: 503
  BlogELBHTTPSListnerRule:
    Type: AWS::ElasticLoadBalancingV2::ListenerRule
    Properties:
      ListenerArn: !Ref BlogELBHTTPSListner
      Priority: 1
      Actions:
        - Type: forward
          ForwardConfig:
            TargetGroups:
              - TargetGroupArn: !Ref BlogELBTargetGroup   
      Conditions:
        - Field: http-header
          HttpHeaderConfig:
            HttpHeaderName: X-Via-Location
            Values:
              - !Ref ElbHostOriginFqdn
        - Field: http-header
          HttpHeaderConfig:
            HttpHeaderName: X-Pre-Shared-Key
            Values:
              - !Ref PreSharedKey

  BlogELBTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: Blog-Wordpress
      VpcId: !ImportValue VPC-Id
      Protocol: HTTP
      Port: 80
      TargetType: ip
      TargetGroupAttributes:
        - Key: deregistration_delay.timeout_seconds
          Value: 15
      HealthCheckPath: /healthcheck.php
Outputs:
  ELBDNSName:
    Value: !GetAtt BlogELB.DNSName
  ELBCanonicalHostedZoneID:
    Value: !GetAtt BlogELB.CanonicalHostedZoneID
  ELBTargetGroupArn:
    Value: !Ref BlogELBTargetGroup
  PreSharedKey:
    Value: !Ref PreSharedKey