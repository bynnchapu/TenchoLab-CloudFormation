---
AWSTemplateFormatVersion: "2010-09-09"
Resources:
  # Assume role for Administrator
  IAMRoleAssumeAdministrator:
    Type: AWS::IAM::Role
    Properties:
      RoleName: AssumeRole-Administrator
      MaxSessionDuration: 43200
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              AWS:
                - !Sub "arn:${AWS::Partition}:iam::${AWS::AccountId}:root"
            Action:
              - sts:AssumeRole
            Condition:
              Bool:
                "aws:MultiFactorAuthPresent": "true"
      Path: /
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AdministratorAccess"
  IAMPolicyAllowAssumeRoleToAdministrator:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: Custom-AllowAssumeRoleToAdministrator
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Resource:
              - !GetAtt IAMRoleAssumeAdministrator.Arn

  IAMRoleEc2Default:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EC2-Default
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"
        - !Ref IAMPolicyEc2AllowExportSessionLogs
  IAMPolicyEc2AllowExportSessionLogs:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: Custom-EC2AllowExportSessionLogs
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - ssmmessages:CreateControlChannel
              - ssmmessages:CreateDataChannel
              - ssmmessages:OpenControlChannel
              - ssmmessages:OpenDataChannel
              - ssm:UpdateInstanceInformation
            Resource: "*"
          - Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:PutLogEvents
              - logs:DescribeLogGroups
              - logs:DescribeLogStreams
            Resource: "*"
          - Effect: Allow
            Action:
              - s3:PutObject
            Resource: arn:aws:s3:::tencho-lab-security-log/SessionManager/*
          - Effect: Allow
            Action:
              - s3:GetEncryptionConfiguration
            Resource: "*"
          #- Effect: Allow
          #  Action:
          #    - kms:Decrypt
          #  Resource: key-name
          #- Effect: Allow
          #  Action: kms:GenerateDataKey
          #  Resource: "*"
  
  IAMProfileEc2DefaultInstance:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: EC2-Default
      Roles:
        - !Ref IAMRoleEc2Default

  IAMRoleEc2Bastion:
    Type: AWS::IAM::Role
    Properties:
      RoleName: EC2-Bastion
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/AmazonSSMManagedInstanceCore"
        - !Ref IAMPolicyEc2AllowModifyInstanceAttiribute
        - !Ref IAMPolicyEc2AllowModifyInstanceMetadataOptions
        - !Ref IAMPolicyEc2AllowExportSessionLogs
  IAMEc2ProfileBastionInstance:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: EC2-Bastion
      Roles:
        - !Ref IAMRoleEc2Bastion
  IAMPolicyEc2AllowModifyInstanceAttiribute:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: Custom-EC2AllowModifyInstanceAttribute
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowModifyInstanceAttribute
            Effect: Allow
            Action: ec2:ModifyInstanceAttribute
            Resource: "*"
  IAMPolicyEc2AllowModifyInstanceMetadataOptions:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: Custom-EC2AllowModifyInstanceMetadataOptions
      Path: /
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: AllowModifyInstanceAttribute
            Effect: Allow
            Action: ec2:ModifyInstanceMetadataOptions
            Resource: "*"

  IAMRoleRDSEnhancedMonitor:
    Type: AWS::IAM::Role
    Properties:
      RoleName: RDS-EnhancedMonitor
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - monitoring.rds.amazonaws.com
            Action:
              - sts:AssumeRole
      Path: /
      ManagedPolicyArns:
        - !Sub "arn:${AWS::Partition}:iam::aws:policy/service-role/AmazonRDSEnhancedMonitoringRole"

  IAMPolicyAllowAccessS3GithubActionsArtifact:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      ManagedPolicyName: Custom-AllowAccessGithubActionsArtifact
      PolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Resource:
              - !ImportValue S3-GithubActionsArtifactArn
              - !Sub
                - "${GithubActionsArtifactArn}/*"
                - GithubActionsArtifactArn: !ImportValue S3-GithubActionsArtifactArn
            Action:
              - s3:*
  IAMUserAllowAccessS3GithubActionsArtifact:
    Type: AWS::IAM::User
    Properties:
      UserName: GithubActions-Ansible
      ManagedPolicyArns:
        - !Ref IAMPolicyAllowAccessS3GithubActionsArtifact
        
  # Group for CLI
  IAMGroupCLIUser:
    Type: AWS::IAM::Group
    Properties:
      GroupName: CLIUser
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/ReadOnlyAccess
        - !Ref IAMPolicyAllowAssumeRoleToAdministrator
  # User for WSL
  IAMUserWSL:
    Type: AWS::IAM::User
    Properties:
      UserName: WSL
      Groups:
        - !Ref IAMGroupCLIUser
  # User for moon
  IAMUserMoon:
    Type: AWS::IAM::User
    Properties:
      UserName: moon
      Groups:
        - !Ref IAMGroupCLIUser

Outputs:
  IAMRoleEc2Default:
    Value: !Ref IAMProfileEc2DefaultInstance
    Export:
      Name: IAM-Ec2ProfileDefaultInstance
  IAMRoleEc2Bastion:
    Value: !Ref IAMEc2ProfileBastionInstance
    Export:
      Name: IAM-Ec2ProfiletBastionInstance
  IAMRoleRDSEnhancedMonitorArn:
    Value: !GetAtt IAMRoleRDSEnhancedMonitor.Arn
    Export:
      Name: IAM-RoleRDSEnhancedMonitorArn